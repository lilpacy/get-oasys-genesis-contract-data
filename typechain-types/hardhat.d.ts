/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers'
import {
	FactoryOptions,
	HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomiclabs/hardhat-ethers/types'

import * as Contracts from '.'

declare module 'hardhat/types/runtime' {
	interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
		getContractFactory(
			name: 'Ownable',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Ownable__factory>
		getContractFactory(
			name: 'ERC20',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.ERC20__factory>
		getContractFactory(
			name: 'IERC20Metadata',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC20Metadata__factory>
		getContractFactory(
			name: 'IERC20',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC20__factory>
		getContractFactory(
			name: 'ERC721',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.ERC721__factory>
		getContractFactory(
			name: 'ERC721Enumerable',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.ERC721Enumerable__factory>
		getContractFactory(
			name: 'IERC721Enumerable',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC721Enumerable__factory>
		getContractFactory(
			name: 'IERC721Metadata',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC721Metadata__factory>
		getContractFactory(
			name: 'IERC721',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC721__factory>
		getContractFactory(
			name: 'IERC721Receiver',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC721Receiver__factory>
		getContractFactory(
			name: 'ERC165',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.ERC165__factory>
		getContractFactory(
			name: 'IERC165',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IERC165__factory>
		getContractFactory(
			name: 'Environment',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Environment__factory>
		getContractFactory(
			name: 'IEnvironment',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IEnvironment__factory>
		getContractFactory(
			name: 'IStakeManager',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IStakeManager__factory>
		getContractFactory(
			name: 'Allowlist',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Allowlist__factory>
		getContractFactory(
			name: 'Constants',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Constants__factory>
		getContractFactory(
			name: 'IAllowlist',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.IAllowlist__factory>
		getContractFactory(
			name: 'Token',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Token__factory>
		getContractFactory(
			name: 'INFTBridgeMainchain',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.INFTBridgeMainchain__factory>
		getContractFactory(
			name: 'INFTBridgeSidechain',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.INFTBridgeSidechain__factory>
		getContractFactory(
			name: 'NFTBridgeMainchain',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.NFTBridgeMainchain__factory>
		getContractFactory(
			name: 'NFTBridgeRelayer',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.NFTBridgeRelayer__factory>
		getContractFactory(
			name: 'NFTBridgeSidechain',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.NFTBridgeSidechain__factory>
		getContractFactory(
			name: 'SidechainERC721',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.SidechainERC721__factory>
		getContractFactory(
			name: 'Signers',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.Signers__factory>
		getContractFactory(
			name: 'StakeManager',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.StakeManager__factory>
		getContractFactory(
			name: 'System',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.System__factory>
		getContractFactory(
			name: 'TestERC20',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.TestERC20__factory>
		getContractFactory(
			name: 'TestERC721',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.TestERC721__factory>
		getContractFactory(
			name: 'LOAS',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.LOAS__factory>
		getContractFactory(
			name: 'SOAS',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.SOAS__factory>
		getContractFactory(
			name: 'WOAS',
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<Contracts.WOAS__factory>

		getContractAt(
			name: 'Ownable',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Ownable>
		getContractAt(
			name: 'ERC20',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.ERC20>
		getContractAt(
			name: 'IERC20Metadata',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC20Metadata>
		getContractAt(
			name: 'IERC20',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC20>
		getContractAt(
			name: 'ERC721',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.ERC721>
		getContractAt(
			name: 'ERC721Enumerable',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.ERC721Enumerable>
		getContractAt(
			name: 'IERC721Enumerable',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC721Enumerable>
		getContractAt(
			name: 'IERC721Metadata',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC721Metadata>
		getContractAt(
			name: 'IERC721',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC721>
		getContractAt(
			name: 'IERC721Receiver',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC721Receiver>
		getContractAt(
			name: 'ERC165',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.ERC165>
		getContractAt(
			name: 'IERC165',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IERC165>
		getContractAt(
			name: 'Environment',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Environment>
		getContractAt(
			name: 'IEnvironment',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IEnvironment>
		getContractAt(
			name: 'IStakeManager',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IStakeManager>
		getContractAt(
			name: 'Allowlist',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Allowlist>
		getContractAt(
			name: 'Constants',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Constants>
		getContractAt(
			name: 'IAllowlist',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.IAllowlist>
		getContractAt(
			name: 'Token',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Token>
		getContractAt(
			name: 'INFTBridgeMainchain',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.INFTBridgeMainchain>
		getContractAt(
			name: 'INFTBridgeSidechain',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.INFTBridgeSidechain>
		getContractAt(
			name: 'NFTBridgeMainchain',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.NFTBridgeMainchain>
		getContractAt(
			name: 'NFTBridgeRelayer',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.NFTBridgeRelayer>
		getContractAt(
			name: 'NFTBridgeSidechain',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.NFTBridgeSidechain>
		getContractAt(
			name: 'SidechainERC721',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.SidechainERC721>
		getContractAt(
			name: 'Signers',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.Signers>
		getContractAt(
			name: 'StakeManager',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.StakeManager>
		getContractAt(
			name: 'System',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.System>
		getContractAt(
			name: 'TestERC20',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.TestERC20>
		getContractAt(
			name: 'TestERC721',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.TestERC721>
		getContractAt(
			name: 'LOAS',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.LOAS>
		getContractAt(
			name: 'SOAS',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.SOAS>
		getContractAt(
			name: 'WOAS',
			address: string,
			signer?: ethers.Signer,
		): Promise<Contracts.WOAS>

		// default types
		getContractFactory(
			name: string,
			signerOrOptions?: ethers.Signer | FactoryOptions,
		): Promise<ethers.ContractFactory>
		getContractFactory(
			abi: any[],
			bytecode: ethers.utils.BytesLike,
			signer?: ethers.Signer,
		): Promise<ethers.ContractFactory>
		getContractAt(
			nameOrAbi: string | any[],
			address: string,
			signer?: ethers.Signer,
		): Promise<ethers.Contract>
	}
}
