/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IAllowlist, IAllowlistInterface } from '../../../contracts/lib/IAllowlist'

const _abi = [
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_address',
				type: 'address',
			},
		],
		name: 'AllowlistAdded',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_address',
				type: 'address',
			},
		],
		name: 'AllowlistRemoved',
		type: 'event',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_address',
				type: 'address',
			},
		],
		name: 'addAddress',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_address',
				type: 'address',
			},
		],
		name: 'containsAddress',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'getAllowlist',
		outputs: [
			{
				internalType: 'address[]',
				name: '',
				type: 'address[]',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_address',
				type: 'address',
			},
		],
		name: 'removeAddress',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
]

export class IAllowlist__factory {
	static readonly abi = _abi
	static createInterface(): IAllowlistInterface {
		return new utils.Interface(_abi) as IAllowlistInterface
	}
	static connect(address: string, signerOrProvider: Signer | Provider): IAllowlist {
		return new Contract(address, _abi, signerOrProvider) as IAllowlist
	}
}
