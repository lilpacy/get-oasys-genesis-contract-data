/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type {
	L2StandardERC721,
	L2StandardERC721Interface,
} from '../../../../contracts/L2/token/L2StandardERC721'

const _abi = [
	{
		inputs: [
			{
				internalType: 'address',
				name: '_l2Bridge',
				type: 'address',
			},
			{
				internalType: 'address',
				name: '_l1Token',
				type: 'address',
			},
			{
				internalType: 'string',
				name: '_name',
				type: 'string',
			},
			{
				internalType: 'string',
				name: '_symbol',
				type: 'string',
			},
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'approved',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'Approval',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'operator',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'bool',
				name: 'approved',
				type: 'bool',
			},
		],
		name: 'ApprovalForAll',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: '_tokenId',
				type: 'uint256',
			},
		],
		name: 'L2BridgeBurn',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: '_tokenId',
				type: 'uint256',
			},
		],
		name: 'L2BridgeMint',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'Transfer',
		type: 'event',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'approve',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
		],
		name: 'balanceOf',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'burn',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_from',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: '_tokenId',
				type: 'uint256',
			},
		],
		name: 'burn',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'getApproved',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'operator',
				type: 'address',
			},
		],
		name: 'isApprovedForAll',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'l1Token',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'l2Bridge',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: '_tokenId',
				type: 'uint256',
			},
		],
		name: 'mint',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'name',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'ownerOf',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'safeTransferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
			{
				internalType: 'bytes',
				name: 'data',
				type: 'bytes',
			},
		],
		name: 'safeTransferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'operator',
				type: 'address',
			},
			{
				internalType: 'bool',
				name: 'approved',
				type: 'bool',
			},
		],
		name: 'setApprovalForAll',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'bytes4',
				name: 'interfaceId',
				type: 'bytes4',
			},
		],
		name: 'supportsInterface',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'symbol',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'index',
				type: 'uint256',
			},
		],
		name: 'tokenByIndex',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'index',
				type: 'uint256',
			},
		],
		name: 'tokenOfOwnerByIndex',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'tokenURI',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'totalSupply',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'tokenId',
				type: 'uint256',
			},
		],
		name: 'transferFrom',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
]

const _bytecode =
	'0x60806040523480156200001157600080fd5b5060405162001cdb38038062001cdb833981016040819052620000349162000171565b8181600062000044838262000290565b50600162000053828262000290565b5050600a80546001600160a01b039586166001600160a01b031991821617909155600b805496909516951694909417909255506200035c915050565b80516001600160a01b0381168114620000a757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000d457600080fd5b81516001600160401b0380821115620000f157620000f1620000ac565b604051601f8301601f19908116603f011681019082821181831017156200011c576200011c620000ac565b816040528381526020925086838588010111156200013957600080fd5b600091505b838210156200015d57858201830151818301840152908201906200013e565b600093810190920192909252949350505050565b600080600080608085870312156200018857600080fd5b62000193856200008f565b9350620001a3602086016200008f565b60408601519093506001600160401b0380821115620001c157600080fd5b620001cf88838901620000c2565b93506060870151915080821115620001e657600080fd5b50620001f587828801620000c2565b91505092959194509250565b600181811c908216806200021657607f821691505b6020821081036200023757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028b57600081815260208120601f850160051c81016020861015620002665750805b601f850160051c820191505b81811015620002875782815560010162000272565b5050505b505050565b81516001600160401b03811115620002ac57620002ac620000ac565b620002c481620002bd845462000201565b846200023d565b602080601f831160018114620002fc5760008415620002e35750858301515b600019600386901b1c1916600185901b17855562000287565b600085815260208120601f198616915b828110156200032d578886015182559484019460019091019084016200030c565b50858210156200034c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61196f806200036c6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80634f6ccce7116100b8578063a22cb4651161007c578063a22cb4651461027e578063ae1f6aaf14610291578063b88d4fde146102a4578063c01e1bd6146102b7578063c87b56dd146102ca578063e985e9c5146102dd57600080fd5b80634f6ccce71461022a5780636352211e1461023d57806370a082311461025057806395d89b41146102635780639dc29fac1461026b57600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806340c10f19146101f157806342842e0e1461020457806342966c681461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a366004611480565b610319565b60405190151581526020015b60405180910390f35b61016c610344565b60405161015b91906114ed565b61018c610187366004611500565b6103d6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611535565b6103fd565b005b6008545b60405190815260200161015b565b6101b76101d936600461155f565b610517565b6101bd6101ec366004611535565b610549565b6101b76101ff366004611535565b6105df565b6101b761021236600461155f565b61068a565b6101b7610225366004611500565b6106a5565b6101bd610238366004611500565b6106d6565b61018c61024b366004611500565b610769565b6101bd61025e36600461159b565b6107c9565b61016c61084f565b6101b7610279366004611535565b61085e565b6101b761028c3660046115b6565b6108fc565b600b5461018c906001600160a01b031681565b6101b76102b2366004611608565b61090b565b600a5461018c906001600160a01b031681565b61016c6102d8366004611500565b610943565b61014f6102eb3660046116e4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216631d1d8b6360e01b148061033e575061033e826109b7565b92915050565b60606000805461035390611717565b80601f016020809104026020016040519081016040528092919081815260200182805461037f90611717565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b60006103e1826109dc565b506000908152600460205260409020546001600160a01b031690565b600061040882610769565b9050806001600160a01b0316836001600160a01b03160361047a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610496575061049681336102eb565b6105085760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610471565b6105128383610a3b565b505050565b610522335b82610aa9565b61053e5760405162461bcd60e51b815260040161047190611751565b610512838383610b28565b6000610554836107c9565b82106105b65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610471565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600b546001600160a01b031633146106395760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e6044820152606401610471565b6106438282610ccf565b816001600160a01b03167f5171d7763d81890a1b70ea44720d391bf8e865532af2fd40d0910dfe277839258260405161067e91815260200190565b60405180910390a25050565b6105128383836040518060200160405280600081525061090b565b6106ae3361051c565b6106ca5760405162461bcd60e51b815260040161047190611751565b6106d381610e1d565b50565b60006106e160085490565b82106107445760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610471565b600882815481106107575761075761179f565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061033e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610471565b60006001600160a01b0382166108335760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610471565b506001600160a01b031660009081526003602052604090205490565b60606001805461035390611717565b600b546001600160a01b031633146108b85760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e6044820152606401610471565b6108c181610e1d565b816001600160a01b03167f97d58865f212efa4a64ef02844d3cddc2f8f2e3ee3b2c92094a9cb6e85bab8db8260405161067e91815260200190565b610907338383610ec4565b5050565b6109153383610aa9565b6109315760405162461bcd60e51b815260040161047190611751565b61093d84848484610f92565b50505050565b606061094e826109dc565b600061096560408051602081019091526000815290565b9050600081511161098557604051806020016040528060008152506109b0565b8061098f84610fc5565b6040516020016109a09291906117b5565b6040516020818303038152906040525b9392505050565b60006001600160e01b0319821663780e9d6360e01b148061033e575061033e826110c6565b6000818152600260205260409020546001600160a01b03166106d35760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610471565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a7082610769565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ab583610769565b9050806001600160a01b0316846001600160a01b03161480610afc57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b205750836001600160a01b0316610b15846103d6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b3b82610769565b6001600160a01b031614610b9f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610471565b6001600160a01b038216610c015760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610471565b610c0c838383611116565b610c17600082610a3b565b6001600160a01b0383166000908152600360205260408120805460019290610c409084906117fa565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c6e90849061180d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610d255760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610471565b6000818152600260205260409020546001600160a01b031615610d8a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610471565b610d9660008383611116565b6001600160a01b0382166000908152600360205260408120805460019290610dbf90849061180d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610e2882610769565b9050610e3681600084611116565b610e41600083610a3b565b6001600160a01b0381166000908152600360205260408120805460019290610e6a9084906117fa565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b031603610f255760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610471565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f9d848484610b28565b610fa984848484611121565b61093d5760405162461bcd60e51b815260040161047190611820565b606081600003610fec5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611016578061100081611872565b915061100f9050600a836118a1565b9150610ff0565b60008167ffffffffffffffff811115611031576110316115f2565b6040519080825280601f01601f19166020018201604052801561105b576020820181803683370190505b5090505b8415610b20576110706001836117fa565b915061107d600a866118b5565b61108890603061180d565b60f81b81838151811061109d5761109d61179f565b60200101906001600160f81b031916908160001a9053506110bf600a866118a1565b945061105f565b60006001600160e01b031982166380ac58cd60e01b14806110f757506001600160e01b03198216635b5e139f60e01b145b8061033e57506301ffc9a760e01b6001600160e01b031983161461033e565b610512838383611222565b60006001600160a01b0384163b1561121757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111659033908990889088906004016118c9565b6020604051808303816000875af19250505080156111a0575060408051601f3d908101601f1916820190925261119d91810190611906565b60015b6111fd573d8080156111ce576040519150601f19603f3d011682016040523d82523d6000602084013e6111d3565b606091505b5080516000036111f55760405162461bcd60e51b815260040161047190611820565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b20565b506001949350505050565b6001600160a01b03831661127d5761127881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6112a0565b816001600160a01b0316836001600160a01b0316146112a0576112a083826112da565b6001600160a01b0382166112b75761051281611377565b826001600160a01b0316826001600160a01b031614610512576105128282611426565b600060016112e7846107c9565b6112f191906117fa565b600083815260076020526040902054909150808214611344576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611389906001906117fa565b600083815260096020526040812054600880549394509092849081106113b1576113b161179f565b9060005260206000200154905080600883815481106113d2576113d261179f565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061140a5761140a611923565b6001900381819060005260206000200160009055905550505050565b6000611431836107c9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146106d357600080fd5b60006020828403121561149257600080fd5b81356109b08161146a565b60005b838110156114b85781810151838201526020016114a0565b50506000910152565b600081518084526114d981602086016020860161149d565b601f01601f19169290920160200192915050565b6020815260006109b060208301846114c1565b60006020828403121561151257600080fd5b5035919050565b80356001600160a01b038116811461153057600080fd5b919050565b6000806040838503121561154857600080fd5b61155183611519565b946020939093013593505050565b60008060006060848603121561157457600080fd5b61157d84611519565b925061158b60208501611519565b9150604084013590509250925092565b6000602082840312156115ad57600080fd5b6109b082611519565b600080604083850312156115c957600080fd5b6115d283611519565b9150602083013580151581146115e757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561161e57600080fd5b61162785611519565b935061163560208601611519565b925060408501359150606085013567ffffffffffffffff8082111561165957600080fd5b818701915087601f83011261166d57600080fd5b81358181111561167f5761167f6115f2565b604051601f8201601f19908116603f011681019083821181831017156116a7576116a76115f2565b816040528281528a60208487010111156116c057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156116f757600080fd5b61170083611519565b915061170e60208401611519565b90509250929050565b600181811c9082168061172b57607f821691505b60208210810361174b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516117c781846020880161149d565b8351908301906117db81836020880161149d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033e5761033e6117e4565b8082018082111561033e5761033e6117e4565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611884576118846117e4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118b0576118b061188b565b500490565b6000826118c4576118c461188b565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118fc908301846114c1565b9695505050505050565b60006020828403121561191857600080fd5b81516109b08161146a565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220bfcead655cbde03335d4af7c86917cbfa3b38da53b16e308abf862cb4ace321a64736f6c63430008110033'

type L2StandardERC721ConstructorParams =
	| [signer?: Signer]
	| ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
	xs: L2StandardERC721ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class L2StandardERC721__factory extends ContractFactory {
	constructor(...args: L2StandardERC721ConstructorParams) {
		if (isSuperArgs(args)) {
			super(...args)
		} else {
			super(_abi, _bytecode, args[0])
		}
	}

	override deploy(
		_l2Bridge: PromiseOrValue<string>,
		_l1Token: PromiseOrValue<string>,
		_name: PromiseOrValue<string>,
		_symbol: PromiseOrValue<string>,
		overrides?: Overrides & { from?: PromiseOrValue<string> },
	): Promise<L2StandardERC721> {
		return super.deploy(
			_l2Bridge,
			_l1Token,
			_name,
			_symbol,
			overrides || {},
		) as Promise<L2StandardERC721>
	}
	override getDeployTransaction(
		_l2Bridge: PromiseOrValue<string>,
		_l1Token: PromiseOrValue<string>,
		_name: PromiseOrValue<string>,
		_symbol: PromiseOrValue<string>,
		overrides?: Overrides & { from?: PromiseOrValue<string> },
	): TransactionRequest {
		return super.getDeployTransaction(_l2Bridge, _l1Token, _name, _symbol, overrides || {})
	}
	override attach(address: string): L2StandardERC721 {
		return super.attach(address) as L2StandardERC721
	}
	override connect(signer: Signer): L2StandardERC721__factory {
		return super.connect(signer) as L2StandardERC721__factory
	}

	static readonly bytecode = _bytecode
	static readonly abi = _abi
	static createInterface(): L2StandardERC721Interface {
		return new utils.Interface(_abi) as L2StandardERC721Interface
	}
	static connect(address: string, signerOrProvider: Signer | Provider): L2StandardERC721 {
		return new Contract(address, _abi, signerOrProvider) as L2StandardERC721
	}
}
