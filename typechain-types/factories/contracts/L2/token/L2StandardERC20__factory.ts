/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type {
	L2StandardERC20,
	L2StandardERC20Interface,
} from '../../../../contracts/L2/token/L2StandardERC20'

const _abi = [
	{
		inputs: [
			{
				internalType: 'address',
				name: '_l2Bridge',
				type: 'address',
			},
			{
				internalType: 'address',
				name: '_l1Token',
				type: 'address',
			},
			{
				internalType: 'string',
				name: '_name',
				type: 'string',
			},
			{
				internalType: 'string',
				name: '_symbol',
				type: 'string',
			},
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'spender',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'value',
				type: 'uint256',
			},
		],
		name: 'Approval',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: '_amount',
				type: 'uint256',
			},
		],
		name: 'Burn',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: '_account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: '_amount',
				type: 'uint256',
			},
		],
		name: 'Mint',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'value',
				type: 'uint256',
			},
		],
		name: 'Transfer',
		type: 'event',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'owner',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'spender',
				type: 'address',
			},
		],
		name: 'allowance',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'spender',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'amount',
				type: 'uint256',
			},
		],
		name: 'approve',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'account',
				type: 'address',
			},
		],
		name: 'balanceOf',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_from',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: '_amount',
				type: 'uint256',
			},
		],
		name: 'burn',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'decimals',
		outputs: [
			{
				internalType: 'uint8',
				name: '',
				type: 'uint8',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'spender',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'subtractedValue',
				type: 'uint256',
			},
		],
		name: 'decreaseAllowance',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'spender',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'addedValue',
				type: 'uint256',
			},
		],
		name: 'increaseAllowance',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'l1Token',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'l2Bridge',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: '_amount',
				type: 'uint256',
			},
		],
		name: 'mint',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'name',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'bytes4',
				name: '_interfaceId',
				type: 'bytes4',
			},
		],
		name: 'supportsInterface',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'pure',
		type: 'function',
	},
	{
		inputs: [],
		name: 'symbol',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'totalSupply',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'amount',
				type: 'uint256',
			},
		],
		name: 'transfer',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'from',
				type: 'address',
			},
			{
				internalType: 'address',
				name: 'to',
				type: 'address',
			},
			{
				internalType: 'uint256',
				name: 'amount',
				type: 'uint256',
			},
		],
		name: 'transferFrom',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
]

const _bytecode =
	'0x60806040523480156200001157600080fd5b50604051620010c7380380620010c7833981016040819052620000349162000171565b8181600362000044838262000290565b50600462000053828262000290565b5050600580546001600160a01b039586166001600160a01b0319918216179091556006805496909516951694909417909255506200035c915050565b80516001600160a01b0381168114620000a757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000d457600080fd5b81516001600160401b0380821115620000f157620000f1620000ac565b604051601f8301601f19908116603f011681019082821181831017156200011c576200011c620000ac565b816040528381526020925086838588010111156200013957600080fd5b600091505b838210156200015d57858201830151818301840152908201906200013e565b600093810190920192909252949350505050565b600080600080608085870312156200018857600080fd5b62000193856200008f565b9350620001a3602086016200008f565b60408601519093506001600160401b0380821115620001c157600080fd5b620001cf88838901620000c2565b93506060870151915080821115620001e657600080fd5b50620001f587828801620000c2565b91505092959194509250565b600181811c908216806200021657607f821691505b6020821081036200023757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028b57600081815260208120601f850160051c81016020861015620002665750805b601f850160051c820191505b81811015620002875782815560010162000272565b5050505b505050565b81516001600160401b03811115620002ac57620002ac620000ac565b620002c481620002bd845462000201565b846200023d565b602080601f831160018114620002fc5760008415620002e35750858301515b600019600386901b1c1916600185901b17855562000287565b600085815260208120601f198616915b828110156200032d578886015182559484019460019091019084016200030c565b50858210156200034c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d5b806200036c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610208578063ae1f6aaf1461021b578063c01e1bd614610246578063dd62ed3e1461025957600080fd5b806370a08231146101b157806395d89b41146101da5780639dc29fac146101e2578063a457c2d7146101f557600080fd5b806323b872dd116100d357806323b872dd14610167578063313ce5671461017a578063395093511461018957806340c10f191461019c57600080fd5b806301ffc9a71461010557806306fdde031461012d578063095ea7b31461014257806318160ddd14610155575b600080fd5b610118610113366004610b60565b61026c565b60405190151581526020015b60405180910390f35b6101356102ca565b6040516101249190610b91565b610118610150366004610bfb565b61035c565b6002545b604051908152602001610124565b610118610175366004610c25565b610376565b60405160128152602001610124565b610118610197366004610bfb565b61039a565b6101af6101aa366004610bfb565b6103bc565b005b6101596101bf366004610c61565b6001600160a01b031660009081526020819052604090205490565b61013561046c565b6101af6101f0366004610bfb565b61047b565b610118610203366004610bfb565b61051a565b610118610216366004610bfb565b610595565b60065461022e906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b60055461022e906001600160a01b031681565b610159610267366004610c7c565b6105a3565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2631d1d8b6360e01b6001600160e01b031984166301ffc9a760e01b14806102c257506001600160e01b0319848116908216145b949350505050565b6060600380546102d990610caf565b80601f016020809104026020016040519081016040528092919081815260200182805461030590610caf565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b60003361036a8185856105ce565b60019150505b92915050565b6000336103848582856106f3565b61038f85858561076d565b506001949350505050565b60003361036a8185856103ad83836105a3565b6103b79190610cff565b6105ce565b6006546001600160a01b0316331461041b5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064015b60405180910390fd5b610425828261093b565b816001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161046091815260200190565b60405180910390a25050565b6060600480546102d990610caf565b6006546001600160a01b031633146104d55760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e6044820152606401610412565b6104df8282610a1a565b816001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161046091815260200190565b6000338161052882866105a3565b9050838110156105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610412565b61038f82868684036105ce565b60003361036a81858561076d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610412565b6001600160a01b0382166106915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610412565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106ff84846105a3565b90506000198114610767578181101561075a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610412565b61076784848484036105ce565b50505050565b6001600160a01b0383166107d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610412565b6001600160a01b0382166108335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610412565b6001600160a01b038316600090815260208190526040902054818110156108ab5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610412565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108e2908490610cff565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092e91815260200190565b60405180910390a3610767565b6001600160a01b0382166109915760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610412565b80600260008282546109a39190610cff565b90915550506001600160a01b038216600090815260208190526040812080548392906109d0908490610cff565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a7a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610412565b6001600160a01b03821660009081526020819052604090205481811015610aee5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610412565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b1d908490610d12565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106e6565b600060208284031215610b7257600080fd5b81356001600160e01b031981168114610b8a57600080fd5b9392505050565b600060208083528351808285015260005b81811015610bbe57858101830151858201604001528201610ba2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bf657600080fd5b919050565b60008060408385031215610c0e57600080fd5b610c1783610bdf565b946020939093013593505050565b600080600060608486031215610c3a57600080fd5b610c4384610bdf565b9250610c5160208501610bdf565b9150604084013590509250925092565b600060208284031215610c7357600080fd5b610b8a82610bdf565b60008060408385031215610c8f57600080fd5b610c9883610bdf565b9150610ca660208401610bdf565b90509250929050565b600181811c90821680610cc357607f821691505b602082108103610ce357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037057610370610ce9565b8181038181111561037057610370610ce956fea26469706673582212205a2095e8d66d0e7e029de150242603ef44eec8fa52869db2902f30550c325f7564736f6c63430008110033'

type L2StandardERC20ConstructorParams =
	| [signer?: Signer]
	| ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
	xs: L2StandardERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class L2StandardERC20__factory extends ContractFactory {
	constructor(...args: L2StandardERC20ConstructorParams) {
		if (isSuperArgs(args)) {
			super(...args)
		} else {
			super(_abi, _bytecode, args[0])
		}
	}

	override deploy(
		_l2Bridge: PromiseOrValue<string>,
		_l1Token: PromiseOrValue<string>,
		_name: PromiseOrValue<string>,
		_symbol: PromiseOrValue<string>,
		overrides?: Overrides & { from?: PromiseOrValue<string> },
	): Promise<L2StandardERC20> {
		return super.deploy(
			_l2Bridge,
			_l1Token,
			_name,
			_symbol,
			overrides || {},
		) as Promise<L2StandardERC20>
	}
	override getDeployTransaction(
		_l2Bridge: PromiseOrValue<string>,
		_l1Token: PromiseOrValue<string>,
		_name: PromiseOrValue<string>,
		_symbol: PromiseOrValue<string>,
		overrides?: Overrides & { from?: PromiseOrValue<string> },
	): TransactionRequest {
		return super.getDeployTransaction(_l2Bridge, _l1Token, _name, _symbol, overrides || {})
	}
	override attach(address: string): L2StandardERC20 {
		return super.attach(address) as L2StandardERC20
	}
	override connect(signer: Signer): L2StandardERC20__factory {
		return super.connect(signer) as L2StandardERC20__factory
	}

	static readonly bytecode = _bytecode
	static readonly abi = _abi
	static createInterface(): L2StandardERC20Interface {
		return new utils.Interface(_abi) as L2StandardERC20Interface
	}
	static connect(address: string, signerOrProvider: Signer | Provider): L2StandardERC20 {
		return new Contract(address, _abi, signerOrProvider) as L2StandardERC20
	}
}
